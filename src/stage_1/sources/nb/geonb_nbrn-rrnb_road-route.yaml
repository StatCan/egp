coverage:
  country: ca
  province: nb
  ISO3166:
    alpha2: CA-NB
    country: Canada
    subdivision: New Brunswick
  website: http://www.snb.ca/geonb1/e/DC/catalogue-E.asp
license:
  url: http://geonb.snb.ca/documents/license/geonb-odl_en.pdf
  text: GeoNB Open Data Licence
language: en
data:
  filename: geonb_nbrn-rrnb_shp/geonb_nbrn-rrnb_road-route.shp
  layer:
  driver: ESRI Shapefile
conform:
  addrange:
    acqtech:
    metacover:
    credate:
    datasetnam: "New Brunswick"
    accuracy:
    provider:
    revdate:
    specvers:
    l_altnanid:
    r_altnanid:
    l_digdirfg:
    r_digdirfg:
    l_hnumf:
      fields: l_hnumf
      functions:
        regex_sub:
          pattern_from: \W+
          pattern_to: " "
        regex_find:
          pattern:
            # Matches 0 to unlimited digits from line start.
            (^\d+)
          match_index: 0
          group_index: 0
    r_hnumf:
      fields: r_hnumf
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    l_hnumsuff:
      fields: l_hnumf
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
          modify_parameters:
            regex_find:
              strip_result: True
    r_hnumsuff:
      fields: r_hnumf
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
          modify_parameters:
            regex_find:
              strip_result: True
    l_hnumtypf:
    r_hnumtypf:
    l_hnumstr: l_hnumstr
    r_hnumstr: r_hnumstr
    l_hnuml:
      fields: l_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    r_hnuml:
      fields: r_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    l_hnumsufl:
      fields: l_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
          modify_parameters:
            regex_find:
              strip_result: True
    r_hnumsufl:
      fields: r_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
          modify_parameters:
            regex_find:
              strip_result: True
    l_hnumtypl:
    r_hnumtypl:
    nid:
    l_offnanid:
    r_offnanid:
    l_rfsysind:
    r_rfsysind:
  roadseg:
    acqtech:
    metacover:
    credate:
    datasetnam: "New Brunswick"
    accuracy:
    provider:
    revdate:
    specvers:
    l_adddirfg:
    r_adddirfg:
    adrangenid:
    closing: closing
    exitnbr: exitnbr
    l_hnumf:
      fields: l_hnumf
      functions:
        regex_sub:
          pattern_from: \W+
          pattern_to: " "
        regex_find:
          pattern:
            # Matches 0 to unlimited digits from line start.
            (^\d+)
          match_index: 0
          group_index: 0
    r_hnumf:
      fields: r_hnumf
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    roadclass: roadclass
    l_hnuml:
      fields: l_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    r_hnuml:
      fields: r_hnuml
      functions:
        copy_attribute_functions:
          attributes: [l_hnumf]
    nid:
    nbrlanes: nbrlanes
    l_placenam: l_placenam
    r_placenam: r_placenam
    l_stname_c: streetname
    r_stname_c: streetname
    pavsurf: pavsurf
    pavstatus: pavstatus
    roadjuris:
    roadsegid: roadsegid
    rtename1en: rtename1en
    rtename2en: rtename2en
    rtename3en:
    rtename4en:
    rtename1fr: rtename1fr
    rtename2fr: rtename2fr
    rtename3fr:
    rtename4fr:
    rtnumber1: rtnumber1
    rtnumber2: rtnumber2
    rtnumber3:
    rtnumber4:
    rtnumber5:
    speed: speed
    strunameen: strunameen
    strunamefr: strunamefr
    structid:
    structtype: structtype
    trafficdir: trafficdir
    unpavsurf: unpavsurf
  strplaname:
    acqtech:
    metacover:
    credate:
    datasetnam: "New Brunswick"
    accuracy:
    provider:
    revdate:
    specvers:
    dirprefix:
      fields: streetname
      functions:
        regex_sub:
          pattern_from: "[-]"
          pattern_to: " "
        regex_find:
          pattern:
            # Group 1: preceded by (space(s) and/or non-word char(s)) or line start.
            # Group 2: in list of values.
            # Group 3: succeeded by space(s) and/or non-word char(s).
            # Matches 0 to unlimited times.
            ([\\s\\W]+|^)(domain)([\\s\\W]+)*?
          match_index: 0
          group_index: 1
    dirsuffix:
      fields: streetname
      functions:
        regex_sub:
          pattern_from: "[-]"
          pattern_to: " "
        regex_find:
          pattern:
            # Group 1: preceded by space(s) and/or non-word char(s).
            # Group 2: in list of values.
            # Group 3: succeeded by (space(s) and/or non-word char(s)) or line end.
            # Matches 0 to unlimited times.
            ([\\s\\W]+)(domain)([\\s\\W]+|$)*?
          match_index: -1
          group_index: 1
    muniquad:
    nid:
    placename:
      fields: [l_placenam, r_placenam]
      functions:
        split_record:
          field: None
    placetype:
    province: "New Brunswick"
    starticle:
      fields: streetname
      functions:
        regex_sub:
          pattern_from: "[-]"
          pattern_to: " "
        regex_sub:
          pattern_from: "l'"
          pattern_to: "l' "
        regex_find:
          pattern:
            # Group 1: preceded by (space(s) and/or non-word char(s)) or line start.
            # Group 2: in list of values.
            # Group 3: succeeded by (space(s) and/or non-word char(s)) or line end.
            # Matches 0 to unlimited times.
            ([\\s\\W]+|^)(domain)([\\s\\W]+|$)*?
          match_index: -1
          group_index: 1
    namebody:
      fields: streetname
      functions:
        copy_attribute_functions:
          attributes: [dirprefix, strtypre, starticle, strtysuf, dirsuffix]
          modify_parameters:
            regex_find:
              strip_result: True
    strtypre:
      fields: streetname
      functions:
        regex_sub:
          pattern_from: "[-]"
          pattern_to: " "
        regex_find:
          pattern:
            # Group 1: preceded by (space(s) and/or non-word char(s)) or line start.
            # Group 2: in list of values.
            # Group 3: succeeded by space(s) and/or non-word char(s).
            # Matches 0 to unlimited times.
            ([\\s\\W]+|^)(domain)([\\s\\W]+)*?
          match_index: 0
          group_index: 1
    strtysuf:
      fields: streetname
      functions:
        regex_sub:
          pattern_from: "[-]"
          pattern_to: " "
        regex_find:
          pattern:
            # Group 1: preceded by space(s) and/or non-word char(s).
            # Group 2: in list of values.
            # Group 3: succeeded by (space(s) and/or non-word char(s)) or line end.
            # Matches 0 to unlimited times.
            ([\s\W]+)(domain)([\s\W]+|$)*?
          match_index: -1
          group_index: 1